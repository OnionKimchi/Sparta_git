# 학습 리포트 2025-08-08

## 오늘의 활동

- 담당 튜터님의 도움으로 GitHub Desktop의 체크아웃 기능을 활용해 오류가 발생한 버전을 찾아내는 방법을 배움
- 해당 방법으로 오류 발생 시점을 특정했으나, 근본적인 원인은 파악하지 못함
- 결국 이전 정상 버전에서 새 브랜치를 생성하여 오류를 우회하는 방식으로 진행

## 새로 알게 된 점

- `체크아웃(Checkout)`을 이용하면 과거 커밋으로 손쉽게 되돌아가 문제 발생 시점을 확인 가능
- 하지만 코드 베이스의 복잡성이나 외부 의존성에 따라 원인 추적이 어려울 수 있음
- 오류가 해결되지 않아도, 정상 버전에서 브랜치를 새로 파는 것이 하나의 차선책이 될 수 있음

## 느낀 점

- 버전 관리 도구를 적극적으로 활용하면 디버깅 효율이 크게 향상
- 완벽한 해결이 어려운 상황에서도 차선책을 마련하는 역량이 중요하다는 것을 느낌
- 다만, 근본 원인을 못 찾은 채 우회하는 것은 기술 부채로 남을 수 있음을 의식해야 함
