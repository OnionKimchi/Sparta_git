# 학습리포트 2025-07-11

## 오늘의 활동

- `IEnemy` 인터페이스 기반으로 에너미 애니메이션 메서드 구조 정립
- 배틀 담당 팀원이 `BattleManager`에서 사용할 수 있도록 공통 메서드 형태로 전달 가능한 구조 구현
- 스킬 메서드는 `UseActiveSkill(int skillIndex, int targetIndex)` 형태로 호출
- 각 스킬은 `List<Action<Vector3>> ActiveSkills`에 인덱스에 따라 바인딩되며,  
  Awake()에서 액션 리스트에 스킬 메서드들을 등록하는 구조
- 기획자에게 스킬 인덱스를 명확히 정해달라는 요구 전달

## 새로 알게 된 점 / 탐구한 내용

- 인터페이스를 통해 에너미 공통 로직을 추상화하고, 팀원과의 협업 경계선을 명확히 할 수 있었음
- `Action<Vector3>` 델리게이트를 통해 인자 기반으로 다양한 스킬 호출이 가능해짐
- 턴제 전투 구조에서는 UI나 데이터 처리와 애니메이션을 분리하는 게 유지보수와 협업에 효율적

## 느낀 점

- 배틀 시스템을 따로 맡은 팀원과의 협업이 점점 구체화되어가고 있다는 느낌
- 인터페이스 기반 구조 덕분에 협업이 명확하고 깔끔하게 이루어져서 만족스러움
- 인덱스 기반 스킬 구조는 기획과 개발이 동시에 작업하기에도 효율적이라는 걸 느낌

## 내일 학습 계획

- 에너미 스킬 애니메이션 클립 구체화 및 이펙트 처리  
- `UseActiveSkill()` 실행 중 상태 전이와 관련된 예외처리 정리
