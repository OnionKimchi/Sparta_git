# 학습리포트 2025-07-14

## 오늘의 활동

- JSON 데이터 로딩 방식 전환 트러블슈팅  
  기존에는 에디터에서 잘 작동하던  
  `File.ReadAllText(jsonPath)` 방식이 빌드 환경에서는 작동하지 않는 문제가 발생함

- 문제 해결을 위해 Unity의 `Resources.Load<TextAsset>()` 방식으로 전환  
  TextAsset textAsset = Resources.Load<TextAsset>("Json/DiceData");
  string jsonData = textAsset.text;
  이 방식으로 바꾸자 에디터와 빌드 환경 모두에서 정상 작동

## 새로 알게 된 점 / 탐구한 내용

- `File.ReadAllText()`는 빌드된 애플리케이션에서 로컬 파일 경로 접근 제한 때문에 사용이 까다로움
- `Resources.Load()`는 Unity의 리소스 관리 방식에 맞게 에셋을 불러오는 방식으로, 빌드 환경에서도 안정적으로 동작
- 개인적으로는 해당 데이터를 ScriptableObject(SO) 로 구성했으면 더 직관적이고 관리도 쉬웠을 것 같음  
  - 하지만 팀원이 JSON 기반으로 구조를 설계하면서, 주의해야할 부분을 팀 차원에서 놓침

## 느낀 점

- 에디터 기준으로 잘 돌아가는 코드라도, 빌드 시 동작 방식이 다를 수 있다는 점을 항상 고려해야 함
- 협업 중에는 데이터 구조에 대한 의견 조율과 기술적 방향성 공유가 중요하다는 것을 느낌
- SO와 JSON의 장단점을 다시 한번 체감하게 된 경험

## 내일 학습 계획

- 중간 프로젝트 발표회에 참여
