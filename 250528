## 학습리포트 2025-05-28

###  트러블슈팅

#### 아이템 클래스 구조에 대한 협업 설계 충돌

  - 현상: 팀원과 아이템 구현 방식에 대해 의견 차이가 발생함.  
    나는 `ItemData` 하나에서 `Enum`을 활용해 아이템을 분류하고 싶었고,  
    팀원은 아이템 종류마다 개별 Data 스크립트를 만들고 싶어함.

  - 문제점: 플레이어 컨트롤러 입장에선 아이템의 종류가 달라도 처리 방식은 동일한데,  
    스크립트 명이 달라지면 참조가 복잡해지고 유지보수에 비효율이 발생함. If문을 난잡하게 써야 할거 같음.

  - 해결: 아이템 타입별로 Data 스크립트를 각각 만드는 팀원의 방식을 따르 되, 각 아이템 스크립트가 공통 인터페이스 혹은 부모 클래스를 상속하도록 설계 방향을 조정함.  
    이를 통해 플레이어 컨트롤러는 공통된 방식으로 아이템과 상호작용할 수 있게 됨.

  - 다음 계획: 내일 해당 인터페이스 기반 구조를 구현하여 실제 적용해볼 예정.

### ✍️ 느낀 점

- 기술적 문제보다 협업 과정에서의 설계 조율이 더 어렵게 느껴질 때도 있다는 걸 느낌.
- 서로의 관점을 존중하며 유연하게 대화하는 게 협업에서 매우 중요하다는 걸 체감함.
- 결과적으로 유연하고 확장 가능한 구조로 합의해냈다는 점에서 의미 있는 진전이 있었음.
